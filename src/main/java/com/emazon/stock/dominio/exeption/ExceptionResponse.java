package com.emazon.stock.dominio.exeption;

import static com.emazon.stock.dominio.utils.DomainConstants.*;
import static com.emazon.stock.dominio.utils.ErrorTemplates.*;
import static java.lang.String.format;

public enum ExceptionResponse {
    CATEGORY_NOT_FOUND(format(NOT_FOUND, CATEGORY)),
    CATEGORY_ALREADY_EXISTS(format(ALREADY_EXISTS, CATEGORY)),
    CATEGORY_DESCRIPTION_TOO_LONG(format(TOO_LONG, CATEGORY, PROPERTY_DESCRIPTION, CATEGORY_MAX_DESCRIPTION_LENGTH)),
    CATEGORY_NAME_TOO_LONG(format(TOO_LONG, CATEGORY, PROPERTY_NAME, CATEGORY_MAX_NAME_LENGTH)),
    CATEGORY_DESCRIPTION_REQUIRED(format(REQUIRED, CATEGORY, PROPERTY_DESCRIPTION)),
    CATEGORY_NAME_REQUIRED(format(REQUIRED, CATEGORY, PROPERTY_NAME)),
    CATEGORY_PAGE_SORT_DIRECTION_IS_INVALID(format(PAGE_SORT_IS_INVALID, CATEGORY)),
    CATEGORY_PAGE_NUMBER_IS_INVALID(format(PAGE_NUMBER_IS_INVALID, CATEGORY)),
    CATEGORY_PAGE_SIZE_NUMBER_IS_INVALID(format(PAGE_SIZE_IS_INVALID, CATEGORY)),
    CATEGORY_DUPLICATE("Duplicate Category Ids found."),
    CATEGORY_LIST_SIZE("The category list size must be between 1 and 3."),
    BRAND_NOT_FOUND(format(NOT_FOUND, BRAND)),
    BRAND_ALREADY_EXISTS(format(ALREADY_EXISTS, BRAND)),
    BRAND_DESCRIPTION_TOO_LONG(format(TOO_LONG, BRAND, PROPERTY_DESCRIPTION, BRAND_MAX_DESCRIPTION_LENGTH)),
    BRAND_NAME_TOO_LONG(format(TOO_LONG, BRAND, PROPERTY_NAME, BRAND_MAX_NAME_LENGTH)),
    BRAND_DESCRIPTION_REQUIRED(format(REQUIRED, BRAND, PROPERTY_DESCRIPTION)),
    BRAND_NAME_REQUIRED(format(REQUIRED, BRAND, PROPERTY_NAME)),
    BRAND_PAGE_SORT_DIRECTION_IS_INVALID(format(PAGE_SORT_IS_INVALID, BRAND)),
    BRAND_PAGE_NUMBER_IS_INVALID(format(PAGE_NUMBER_IS_INVALID, BRAND)),
    BRAND_PAGE_SIZE_NUMBER_IS_INVALID(format(PAGE_SIZE_IS_INVALID, BRAND)),
    PRODUCT_NAME_REQUIRED(format(REQUIRED, PRODUCT, PROPERTY_NAME)),
    PRODUCT_ALREADY_EXISTS(format(ALREADY_EXISTS, PRODUCT)),
    PRODUCT_NOT_FOUND(format(NOT_FOUND, PRODUCT)),
    PRODUCT_DESCRIPTION_REQUIRED(format(REQUIRED, PRODUCT, PROPERTY_DESCRIPTION)),
    PRODUCT_AMOUNT_GREATER_THAN_ZERO(format(GREATER_THAN_ZERO, PRODUCT, PROPERTY_AMOUNT)),
    PRODUCT_PRICE_GREATER_THAN_ZERO(format(GREATER_THAN_ZERO, PRODUCT, PROPERTY_PRICE)),
    PRODUCT_PAGE_SORT_DIRECTION_IS_INVALID(format(PAGE_SORT_IS_INVALID, PRODUCT)),
    PRODUCT_PAGE_NUMBER_IS_INVALID(format(PAGE_NUMBER_IS_INVALID, PRODUCT)),
    PRODUCT_PAGE_SIZE_NUMBER_IS_INVALID(format(PAGE_SIZE_IS_INVALID, PRODUCT)),
    PRODUCT_PAGE_SORT_BY_IS_INVALID("The sortBy parameter for retrieving the product page is invalid. Please use 'brandName', 'categoryName', or 'productName'."),
    SUPPLY_IS_INVALID("The supply increment must be greater than zero."),
    JWT_INVALID("Token Invalid, not Authorized");
    private final String message;

    ExceptionResponse(String message) {
        this.message = message;
    }

    public String getMessage() {
        return this.message;
    }
}